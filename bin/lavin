#!/usr/bin/env ruby

$LOAD_PATH <<  File.expand_path("../lib", __dir__)
require 'lavin'
require 'optionparser'

module Lavin
  class Script
    def self.run(file, web_ui: true)
      if file.nil?
        exit_with_usage(msg: "No file or directory given")
      elsif File.file?(file)
        $LOAD_PATH << "."
        new(file, web_ui:).run
      elsif Dir.exist?(file)
        $LOAD_PATH << file
        files = Dir.children(file)
        new(*files, web_ui:).run
      else
        exit_with_usage(msg: "File or directory #{file.inspect} does not exist")
      end
    end

    def self.usage
      puts "\nUsage: #{$PROGRAM_NAME} PATH_TO_DIRECTORY_OR_FILE"
    end

    def self.exit_with_usage(msg: nil, status: 1)
      puts msg if msg
      usage
      exit(status)
    end

    attr_reader :files, :web_ui

    def initialize(*files, web_ui: true)
      @files = files
      @web_ui = web_ui
    end

    def run
      files.each { |file| require file }

      if web_ui
        require 'lavin/web_server'
        Lavin::WebServer.run!
      else
        runner = Lavin::Runner.new
        runner.start
        runner.wait
        Statistics.show
      end
    end
  end

  if (ARGV & ["-h", "--help"]).size.positive?
    Script.exit_with_usage(status: 0)
  else
    web_ui = ARGV.delete("--no-web").nil?
    Script.run(ARGV.shift, web_ui:)
  end
end
