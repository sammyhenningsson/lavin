#!/usr/bin/env ruby

$LOAD_PATH <<  File.expand_path("../lib", __dir__)
require 'lavin'
require 'optionparser'

module Lavin
  class Script
    def self.run(*files, web_ui: true)
      exit_with_usage(msg: "No file or directory given") if files.empty?
      files.keep_if { |file| File.exists? file }
      new(*files, web_ui:).run
    end

    def self.usage
      puts "\nUsage: #{$PROGRAM_NAME} PATH_TO_DIRECTORY_OR_FILE [*PATH_TO_DIRECTORY_OR_FILE]"
    end

    def self.exit_with_usage(msg: nil, status: 1)
      puts msg if msg
      usage
      exit(status)
    end

    attr_reader :files, :web_ui

    def initialize(*files, web_ui: true)
      @files = files
      @web_ui = web_ui
    end

    def run
      files.each do |file|
        if Dir.exists? file
          $LOAD_PATH << file unless $LOAD_PATH.include? file
          Dir.children(file).each { |file| require file }
        else
          $LOAD_PATH << "." unless $LOAD_PATH.include? "."
          require file
        end
      end

      if web_ui
        require 'lavin/web_server'
        WebServer.run!
      else
        Signal.trap("INT") do
          puts "\nInterupted! Stopping test\n"
          Runner.stop if Runner.running?
        end
        Runner.start_in_background
        Runner.wait
        Statistics.stop
        Statistics.show
      end
    end
  end

  if (ARGV & ["-h", "--help"]).size.positive?
    Script.exit_with_usage(status: 0)
  else
    web_ui = ARGV.delete("--no-web").nil?
    Script.run(*ARGV, web_ui:)
  end
end
